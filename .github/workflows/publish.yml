name: Publish package
on:
  release:
    types:
      - prereleased
      - released

permissions:
  pull-requests: write
  issues: write
  repository-projects: write

jobs:
  publishpackage:
    runs-on: ubuntu-latest
    name: Publish
    steps:
    - uses: actions/checkout@v3
      name: Code checkout
      with:
        persist-credentials: true
        ref: main
        fetch-depth: 2
        submodules: true

    # Install basic tools
    - uses: actions/setup-node@v3
      name: Setup node.js
      with:
        node-version: latest
        registry-url: https://registry.npmjs.org/

    - run: sudo npm install -g ts-node typescript
      name: Install typescript and ts-node

    - name: Edit version
      shell: node {0}
      run: |
        const fs = require("fs");
        const path = require("path");
        const packagePath = path.join(process.cwd(), "package.json");
        const package = JSON.parse(fs.readFileSync(packagePath, "utf8"));
        package.version = "${{ github.ref }}";
        package.version = package.version.replace(/[A-Za-z_\/]+\/[a-zA-Z]+/, "");
        fs.writeFileSync(packagePath, JSON.stringify(package, null, 2));

    # Install depencides and build
    - run: npm ci

    # Build
    - run: npm run build

    # Publish
    - run: npm publish --tag ${{ github.event.release.prerelease && 'next' || 'latest' }}
      name: Publish to npm
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPMTOKEN }}

    # Add version to environment variables
    - name: show diff and add version to environment variables
      run: |
        git diff | tee
        cat package.json | jq -r '.version' > /tmp/version.txt
        echo "PACKAGE_VERSION=$(cat /tmp/version.txt)" >> $GITHUB_ENV

    # Create pull request to update version in main branch
    - uses: peter-evans/create-pull-request@v4
      name: Create Pull Request
      continue-on-error: true
      with:
        token: "${{ secrets.GITHUB_TOKEN }}"
        commit-message: Update version v${{ env.PACKAGE_VERSION }}
        branch: update-version
        title: Update package version v${{ env.PACKAGE_VERSION }}
        body: Auto update package version to v${{ env.PACKAGE_VERSION }}, created with GitHub Actions
